name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate release notes
      id: release_notes
      uses: actions/github-script@v7
      with:
        script: |
          const { data: commits } = await github.rest.repos.compareCommits({
            owner: context.repo.owner,
            repo: context.repo.repo,
            base: 'main',
            head: context.sha
          });
          
          const changes = commits.commits.map(commit => 
            `- ${commit.commit.message} (${commit.sha.substring(0, 7)})`
          ).join('\n');
          
          return `## What's Changed\n\n${changes}\n\n## Installation\n\n\`\`\`bash\n# Clone the repository\ngit clone https://github.com/${context.repo.owner}/${context.repo.repo}.git\ncd ${context.repo.repo}\n\n# Backend setup\ncd backend\npip install -r requirements.txt\npython manage.py migrate\npython manage.py runserver\n\n# Frontend setup\ncd ../GitHub_Pages\nnpm install\nnpm run dev\n\`\`\``;

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref }}
        body: ${{ steps.release_notes.outputs.result }}
        draft: false
        prerelease: false

  build-docker:
    runs-on: ubuntu-latest
    needs: create-release
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  notify-release:
    runs-on: ubuntu-latest
    needs: [create-release, build-docker]
    if: always()

    steps:
    - name: Notify on Discord
      uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        status: ${{ job.status }}
        title: "Release ${{ github.ref }}"
        description: "Release has been created and Docker image built"
        color: ${{ job.status == 'success' && '#00ff00' || '#ff0000' }} 