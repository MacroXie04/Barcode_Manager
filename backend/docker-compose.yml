version: '3.8'

services:
  # Development environment
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=barcode.settings
    depends_on:
      - db
    command: python manage.py runserver 0.0.0.0:8000

  # Production environment
  web-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8001:8000"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env
    environment:
      - DEBUG=False
      - DJANGO_SETTINGS_MODULE=barcode.settings
    depends_on:
      - db
    restart: unless-stopped

  # Database (SQLite for development, PostgreSQL for production)
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=barcode_db
      - POSTGRES_USER=barcode_user
      - POSTGRES_PASSWORD=barcode_password
    ports:
      - "5432:5432"

  # Redis (for caching and session storage)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Nginx (production environment)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - web-prod
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: 